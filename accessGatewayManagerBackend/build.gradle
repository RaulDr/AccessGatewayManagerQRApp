buildscript {
	ext {
		springBootVersion = '2.0.2.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'application'

group = 'com.unitbv.accessGatewayManager'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

mainClassName = "com.unitbv.accessGatewayManager.AccessGatewayManagerApplication"

repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-websocket')
	compile('org.springframework.session:spring-session-core')
	runtime('org.springframework.boot:spring-boot-devtools')
	runtime('org.postgresql:postgresql')
	compileOnly('org.projectlombok:lombok')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
	testCompile('org.springframework.security:spring-security-test')

	//Security
	compile ( 'org.springframework.mobile:spring-mobile-device:1.1.5.RELEASE')
	compile ('io.jsonwebtoken:jjwt:0.7.0')
	//mail
	compile ('org.springframework.boot:spring-boot-starter-mail:2.0.2.RELEASE')
}

task ngDeploy(type: Copy) {
    from '../accessGatewayManager/dist'
    into 'src/main/resources/static'
}

task stage(dependsOn: ['clean','installDist','ngDeploy','build'])
build.mustRunAfter clean
build.mustRunAfter ngDeploy
